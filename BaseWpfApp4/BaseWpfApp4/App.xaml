<Application x:Class="BaseWpfApp4.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BaseWpfApp4"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

       
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                    <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                    <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />-->

                    <ResourceDictionary>
                        <!--ACCENT COLORS-->
                        <Color x:Key="HighlightColor">#555555</Color>

                        <!--80%-->
                        <!--<Color x:Key="AccentColor">#555555</Color>    CornflowerBlue: 6495ed-->
                        <Color x:Key="AccentColor">#88BAE8</Color>
                        <!--60%-->
                        <Color x:Key="AccentColor2">#EA1C2E</Color>
                        <!--40%-->
                        <Color x:Key="AccentColor3">#F9C90E</Color>
                        <!--20%-->
                        <Color x:Key="AccentColor4">#ADBA21</Color>

                        <!-- re-set brushes too -->
                        <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}" />
                        <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource AccentColor}"/>
                        <SolidColorBrush x:Key="AccentColorBrush2" Color="{StaticResource AccentColor2}"/>
                        <SolidColorBrush x:Key="AccentColorBrush3" Color="{StaticResource AccentColor3}"/>
                        <SolidColorBrush x:Key="AccentColorBrush4" Color="{StaticResource AccentColor4}"/>

                        <SolidColorBrush x:Key="WindowTitleColorBrush" Color="{StaticResource AccentColor}" />

                        <SolidColorBrush x:Key="AccentSelectedColorBrush" Color="White" />

                        <!--Button Styling Start from here-->
                        <Style TargetType="Button" x:Key="CRUDButton">
                            <Setter Property="SnapsToDevicePixels" Value="true"/>
                            <Setter Property="OverridesDefaultStyle" Value="true"/>

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button" >
                                        <Border Name="shortcutbutton" BorderThickness="0" BorderBrush="Transparent" CornerRadius="5" Background="{TemplateBinding Background}">
                                            <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                                        </Border>

                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true" >
                                                <Setter TargetName="shortcutbutton" Property="Cursor" Value="Hand" />
                                                <Setter  Property="Foreground" Value="White" />
                                                <Setter TargetName="shortcutbutton" Property="Background" Value="CornflowerBlue"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="true">
                                                <Setter Property="Foreground" Value="White" />
                                                <Setter Property="Background" Value="Gray" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <!--Button Styling Ends here-->

                        <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                            <Setter Property="FontSize" Value="20"/>
                        </Style>
                        <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="FontSize" Value="12" />
                            <Setter Property="Height" Value="30" />
                        </Style>
                        <!--<Style TargetType="toolkit:DateTimePicker">
                            <Setter Property="Foreground" Value="White"/>
                        </Style>-->


                        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>


                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="Height" Value="30"></Setter>
                            <Setter Property="Validation.ErrorTemplate">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <StackPanel>
                                            <AdornedElementPlaceholder x:Name="placeholder"/>
                                            <TextBlock FontSize="12" Foreground="White" Text="{Binding ElementName=placeholder,
                                                        Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="Background" Value="LightSalmon"/>
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                                    Path=(Validation.Errors)[0].ErrorContent}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>


                        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="FontSize" Value="12" />
                        </Style>


                        <Style x:Key="DataGridColumnStyle" TargetType="TextBlock">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="Background" Value="DarkRed"/>
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                                Path=(Validation.Errors)[0].ErrorContent}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                        <Style x:Key="DataGridEditingColumnStyle" TargetType="TextBox">
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="Background" Value="DarkRed"/>
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},
                                    Path=(Validation.Errors)[0].ErrorContent}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>





                    </ResourceDictionary>
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        


    </Application.Resources>
</Application>
