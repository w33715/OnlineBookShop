<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--#region CheckBoxes Styles -->
    <!-- Start: CheckBox -->
   
    <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel>
                        <Grid>
                            <Border Width="45"
                                    Height="20"
                                    Background="LightBlue"
                                    CornerRadius="10"
                                    Margin="5 0">
                            </Border>
                            <Border x:Name="Button"
                                    Height="25"
                                    Width="25"
                                    CornerRadius="12.5"
                                    HorizontalAlignment="Left">
                                
                            </Border>
                        </Grid>
                        <ContentPresenter x:Name="content"
                                          Margin="10 0 0 0"
                                         Content="{TemplateBinding Content}"
                                          VerticalAlignment="Center">
                            
                        </ContentPresenter>
                    </StackPanel>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="right">
                            <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                Storyboard.TargetName="Button"
                                                Duration="0:0:0.2"
                                               From="0 0 0 0"
                                                To="28 0 0 0">
                                <ThicknessAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseInOut">
                                        
                                    </CircleEase> 
                                </ThicknessAnimation.EasingFunction>
                                
                            </ThicknessAnimation>
                        </Storyboard>
                        <Storyboard x:Key="left">
                            <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                                Storyboard.TargetName="Button"
                                                Duration="0:0:0.2"
                                               From="28 0 0 0"
                                                To="0 0 0 0">
                                <ThicknessAnimation.EasingFunction>
                                    <CircleEase EasingMode="EaseInOut">

                                    </CircleEase>
                                </ThicknessAnimation.EasingFunction>

                            </ThicknessAnimation>
                        </Storyboard>

                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="left">
                                    
                                </RemoveStoryboard>
                                <BeginStoryboard Storyboard="{StaticResource right}"
                                                 x:Name="right">
                                    
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="Button"
                                    Property="Background"
                                    Value="#fff9f4f4">
                                
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="right">

                                </RemoveStoryboard>
                                <BeginStoryboard Storyboard="{StaticResource left}"
                                                 x:Name="left">

                                </BeginStoryboard>
                            </Trigger.ExitActions>
                            <Setter TargetName="Button"
                                    Property="Background"
                                    Value="#ff060600">

                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>
    

    <!-- End: CheckBox -->
    <!--#endregion-->
    

    <!--#region ToggleButtons Styles -->
    <!-- Start: Togglebutton -->

    <Style x:Key="TogglebuttonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource SecondaryGrayColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryGrayColor}"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="MaxHeight" Value="20"/>
        <Setter Property="MaxWidth" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid >
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                    CornerRadius="7"
                                    Height="14"
                                    Width="35"
                                   VerticalAlignment="Center"
                                    HorizontalAlignment="Center">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0.5" 
                                                      Opacity="0.2"/>
                            </Border.Effect>
                        </Border>

                        <Ellipse x:Name="Ellipse"
                                     Height="20"
                                     Width="20"
                                     HorizontalAlignment="Left"
                                     Fill="{DynamicResource SecondaryBackgroundColor}"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="3">
                            <Ellipse.Effect>
                                <DropShadowEffect ShadowDepth="0.5" 
                                                      Opacity="0.3"/>
                            </Ellipse.Effect>
                        </Ellipse>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Event Trigger Checked -->
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation 
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#c2d1fc" 
                                            Duration="0:0:0.2"/>
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="15 0 0 0"
                                                            Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>

                        </EventTrigger>
                        <!-- End Event Checked -->
                        <!-- Event Trigger Unchecked -->
                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation 
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#CECECE" 
                                            Duration="0:0:0.2"/>
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="0 0 0 0"
                                                            Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>

                        </EventTrigger>
                        <!-- End Event Uncecked-->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Ellipse"
                                    Property="Fill"
                                    Value="{DynamicResource SecondaryBlueColor}"/>
                            <Setter TargetName="Ellipse"
                                    Property="Stroke"
                                    Value="{DynamicResource PrimaryBlueColor}"/>
                        </Trigger>


                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: Togglebutton -->
    <!--#endregion-->

    <!--#region TextBox Styles -->
   

    <!-- Start: TextBoxStyle -->
    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource PrimaryTxtBackgroundColor}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" 
                    Value="{DynamicResource SecondaryTxtGrayColor}"/>
        <Setter Property="Padding" Value="5.2 3.2"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontFamily" Value="Poppins"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="Foreground" 
                    Value="{DynamicResource SecondaryTxtGrayColor}"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="MaxWidth" Value="150"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="txtBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="15"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="True">
                        <Grid Margin="{TemplateBinding Padding}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden"
                                              Margin="-2 2"/>

                            <Label x:Name="WaterMarkerLabel"
                                       Content="{TemplateBinding Tag}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                       Visibility="Collapsed"
                                       Foreground="{TemplateBinding Foreground}"
                                       Padding="{TemplateBinding Padding}"/>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>

                            <Setter Property="Visibility"
                                         TargetName="WaterMarkerLabel"
                                         Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush"
                                        Value="{DynamicResource ThrindaryTxtBlueColor}"/>

                        </Trigger >
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush"
                                        Value="{DynamicResource SecondaryTxtBlueColor}"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource PrimaryTxtBackgroundColor}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" 
                    Value="{DynamicResource SecondaryTxtGrayColor}"/>
        <Setter Property="Padding" Value="5.2 3.2"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontFamily" Value="Poppins"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Foreground" 
                    Value="{DynamicResource SecondaryTxtGrayColor}"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="MaxWidth" Value="150"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="Height" Value="auto"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="txtBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="15"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="True">
                        <Grid Margin="{TemplateBinding Padding}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden"
                                              Margin="-2 2"/>

                            <Label x:Name="WaterMarkerLabel"
                                       Content="{TemplateBinding Tag}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                       Visibility="Collapsed"
                                       Foreground="{TemplateBinding Foreground}"
                                       Padding="{TemplateBinding Padding}"/>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>

                            <Setter Property="Visibility"
                                         TargetName="WaterMarkerLabel"
                                         Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush"
                                        Value="{DynamicResource ThrindaryTxtBlueColor}"/>

                        </Trigger >
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush"
                                        Value="{DynamicResource SecondaryTxtBlueColor}"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="TextBoxStyle2" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource PrimaryTxtBackgroundColor}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" 
                    Value="{DynamicResource SecondaryTxtGrayColor}"/>
        <Setter Property="Padding" Value="5.2 3.2"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontFamily" Value="Poppins"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="Foreground" 
                    Value="{DynamicResource SecondaryTxtGrayColor}"/>
        <Setter Property="Width" Value="auto"/>


        <Setter Property="Height" Value="auto"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="txtBorder"
                                Background="{TemplateBinding Background}"
                                CornerRadius="15"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="True">
                        <Grid Margin="{TemplateBinding Padding}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden"
                                              Margin="-2 2"/>

                            <Label x:Name="WaterMarkerLabel"
                                       Content="{TemplateBinding Tag}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                       Visibility="Collapsed"
                                       Foreground="{TemplateBinding Foreground}"
                                       Padding="{TemplateBinding Padding}"/>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>

                            <Setter Property="Visibility"
                                         TargetName="WaterMarkerLabel"
                                         Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush"
                                        Value="{DynamicResource ThrindaryTxtBlueColor}"/>

                        </Trigger >
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush"
                                        Value="{DynamicResource SecondaryTxtBlueColor}"/>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <!-- End: TextBoxStyle -->

    <!--#endregion TextBoxes Styles -->
    
    <!-- #region Buttons Styles -->
    <!-- Start: PrimaryButtonStyle -->
    <Style x:Key="PrimaryButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonBlueColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryButtonTextColor}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Padding" Value="10 6 10 6"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder" 
                            CornerRadius="20"
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding  HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"/>
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0.5"
                                              Direction="0"
                                              Opacity=".3"/>
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--#region Event  Trigger -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder"
                                    Property="Background" 
                                    Value="{DynamicResource ButtonMouseOverColor}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btnBorder"
                                    Property="Background" 
                                    Value="{DynamicResource  ButtonPressedColor}"/>
                        </Trigger>
                        <!--#endregion-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: Button -->
    <!-- Start: SecondaryButtonStyle -->
    <Style x:Key="SecondaryButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryDarkTextColor}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Padding" Value="11 5.2 11 5.2"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="MaxHeight" Value="40"/>
       
        <Setter Property="Width" Value="auto"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder" 
                            CornerRadius="20"
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding  HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"/>
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="3.5"
                                              Direction="0"
                                              Opacity=".5"/>
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--#region Event  Trigger -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder"
                                    Property="Background" 
                                    Value="{DynamicResource ButtonMouseOverColor}"/>
                            <Setter TargetName="btnBorder" Property="BorderBrush" 
                                Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryButtonTextColor}"/>
                            
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btnBorder"
                                    Property="Background" 
                                    Value="{DynamicResource  ButtonPressedColor}"/>
                            <Setter TargetName="btnBorder" Property="BorderBrush" 
                                Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryButtonTextColor}"/>
                        </Trigger>
                        <!--#endregion-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: Button -->

    <!-- Start: ThirdaryButtonStyle -->
    <Style x:Key="ThirdaryButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonTextColor}"/>
        
        <Setter Property="Foreground" Value="{DynamicResource PrimaryDarkTextColor}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Padding" Value="11 5.2 11 5.2"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="MaxHeight" Value="40"/>

        <Setter Property="Width" Value="auto"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder" 
                            CornerRadius="20"
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="ContentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding  HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"/>
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0.5"
                                              Direction="0"
                                              Opacity=".3"/>
                        </Border.Effect>

                    </Border>
                    <ControlTemplate.Triggers>
                        <!--#region Event  Trigger -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder"
                                    Property="Background" 
                                    Value="{DynamicResource ButtonMouseOverColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryButtonTextColor}"/>
                            <Setter TargetName="btnBorder" Property="BorderBrush" 
                                Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryButtonTextColor}"/>

                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btnBorder"
                                    Property="Background" 
                                    Value="{DynamicResource  ButtonPressedColor}"/>
                            <Setter TargetName="btnBorder" Property="BorderBrush" 
                                Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryButtonTextColor}"/>
                        </Trigger>
                        <!--#endregion-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: Button -->
    
    <!-- Start: IconButtonStyle -->
    <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBlueColor}"/>

        <Setter Property="Foreground" Value="{DynamicResource PrimaryButtonTextColor}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Padding" Value="11 5.2 11 5.2"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="MaxWidth" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder" 
                            CornerRadius="20"
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Path x:Name="Icon" Data="M11,3L11,11 3,11 3,13 11,13 11,21 13,21 13,13 21,13 21,11 13,11 13,3 11,3z"
                              Fill="{DynamicResource PrimaryButtonTextColor}"
                              Height="16" Width="16" Stretch="UniformToFill"/>
                       
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0.5"
                                              Direction="0"
                                              Opacity=".3"/>
                        </Border.Effect>

                    </Border>
                    <ControlTemplate.Triggers>
                        <!--#region Event  Trigger -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder"
                                    Property="Background" 
                                    Value="{DynamicResource ButtonMouseOverColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryButtonTextColor}"/>
                            <Setter TargetName="btnBorder" Property="BorderBrush" 
                                Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryButtonTextColor}"/>

                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btnBorder"
                                    Property="Background" 
                                    Value="{DynamicResource  ButtonPressedColor}"/>
                            <Setter TargetName="btnBorder" Property="BorderBrush" 
                                Value="{DynamicResource PrimaryBlueColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryButtonTextColor}"/>
                        </Trigger>
                        <!--#endregion-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>   
    <!-- End: IconButtonStyle -->
    
    <!-- Start: Icon + Text ButtonStyle-->

    <Style x:Key="IconTextButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource PrimaryButtonBlueColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryButtonTextColor}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Padding" Value="5 6 5 6"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MaxHeight" Value="40"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder" 
                            CornerRadius="20"
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}"
                            MaxHeight="{TemplateBinding MaxHeight}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Path Grid.Column="0"
                                x:Name="Icon" Data="M11,3L11,11 3,11 3,13 11,13 11,21 13,21 13,13 21,13 21,11 13,11 13,3 11,3z"
                              Fill="{DynamicResource PrimaryButtonTextColor}"
                              Height="16" Width="16" Stretch="UniformToFill"/>

                            <ContentPresenter Grid.Column="1"
                                 x:Name="ContentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding  HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          RecognizesAccessKey="True"/>
                        </Grid>
                       
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0.5"
                                              Direction="0"
                                              Opacity=".3"/>
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--#region Event  Trigger -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnBorder"
                                    Property="Background" 
                                    Value="{DynamicResource ButtonMouseOverColor}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btnBorder"
                                    Property="Background" 
                                    Value="{DynamicResource  ButtonPressedColor}"/>
                        </Trigger>
                        <!--#endregion-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End: Icon + Text ButtonStyle-->
    <!--#endregion-->

</ResourceDictionary>